direct to E:\JyotAIshya and FINAL AI AGENT PROMPT: "Build My JyotAIshya Astro App"

🔮 Project Request: Build “JyotAIshya” — a Full-Stack AI Kundali & Horoscope Generator (Offline, Vedic, No APIs)

I want you to create a complete full-stack web application called JyotAIshya, an AI-powered Vedic astrology app that generates:

A full Janma Kundali (Vedic birth chart)

Dosha detection (Manglik, Kaal Sarp, Shani Sade Sati)

Daily horoscope based on Moon sign

Offline-only logic: No third-party APIs or cloud calls

A beautiful, spiritual UI built using Vite + React + TailwindCSS

Fully deployed: Frontend on Vercel, Backend on Render

🌐 Frontend (Vite + React + TailwindCSS)

Create a clean, responsive UI with these features:

📥 Input form to collect:

Full Name

Date of Birth (calendar picker)

Time of Birth (time selector)

Place of Birth (manual + offline dropdown list or coordinates)

📊 Display Kundali chart (12-house layout)

🪐 Show planetary positions (Sun, Moon, Mars…)

🧿 Display Doshas (Manglik, Kaal Sarp, Shani)

📅 Daily horoscope output (rule-based, no AI needed)

📄 Button to download Kundali as styled PDF

🎨 Style the UI in a spiritual/Vedic theme with modern minimalism

Use fetch() to call backend API /api/generate-kundali

🔧 Backend (Node.js or Python — Local Only)

All calculations must be fully offline, with no external APIs

Backend logic:

Determine planetary positions at time/place of birth

Calculate Lagna (Ascendant), Rashi (Moon sign), Nakshatra

Identify Doshas: Manglik, Kaal Sarp, Shani Sade Sati

Provide Panchang details: Tithi, Yoga, Karana

Generate horoscope from hardcoded rule logic based on Rashi

Suggested Libraries (use any that work):

Python: pyswisseph, flatlib, panchanga, astral

Node.js: vedic-astrology-js, astronomia, swisseph-wasm

Output: JSON with all birth chart & prediction data

CopyEdit

/jyotaishya-app ├── /client ← Vite + React + Tailwind (goes to Vercel) │ ├── /components │ ├── /pages │ └── vite.config.js ├── /server ← Backend (Node or Python, deployed on Render) │ ├── /routes/api.js or kundali.py │ ├── /utils/astro.js (Kundali logic) │ └── /data (for local city/timezone databases) └── README.md

🌍 Deployment Instructions

Deploy frontend /client folder to Vercel (auto-detect Vite)

Deploy backend /server to Render as a web service (Python or Node)

Ensure CORS is enabled and endpoints work cross-origin

✨ Bonus Features (Optional)

🧞 Add chatbot later using groq or together api to answer: “When will I get married?”

❤️ Add Guna Milan (Kundali matchmaking)

🛕 PDF includes traditional chart + dosha + spiritual message

🎯 Goal: Build a full-stack offline Vedic astrology app with a modern frontend (Vite), a powerful backend with complete astrological calculations, and full deployment (Vercel + Render). No paid APIs, no cloud dependencies — just open-source power.